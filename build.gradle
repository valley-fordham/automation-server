plugins {
    id 'java-library'
    id "com.github.johnrengelman.shadow" version "6.0.0"
}

group 'com.glenfordham'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

sourceSets.main.java.srcDirs = ['src/main/java/']
// Configuration schema and Log4j2 XML resources
sourceSets.main.resources.srcDirs = [ "src/main/resources" ]
sourceSets.main.resources.includes = [ "**/*.xml", "**/*.xsd" ]

compileJava.dependsOn('buildJavaFromSchema')

jar {
    manifest {
        attributes(
                'Main-Class': 'com.glenfordham.webserver.Application',
                'Implementation-Title': 'Web Server',
                'Implementation-Version': getArchiveVersion(),
        )
    }
}

repositories {
    mavenCentral()
}

dependencies {
    final String tomcatVersion = '9.0.36'

    testImplementation 'junit:junit:4.12'

    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'commons-cli:commons-cli:1.4'
    implementation 'commons-io:commons-io:2.7'
    implementation 'jakarta.activation:jakarta.activation-api:2.0.0-RC3'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.0-RC3'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.3'
    implementation 'org.apache.tomcat.embed:tomcat-embed-core:'+tomcatVersion
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:'+tomcatVersion
    implementation 'org.apache.tomcat:tomcat-jasper:'+tomcatVersion
    implementation 'org.apache.tomcat:tomcat-jasper-el:'+tomcatVersion
    implementation 'org.apache.tomcat:tomcat-jsp-api:'+tomcatVersion
    implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.0-M4'
}

// Generate JAXB objects from schema at build-time
task buildJavaFromSchema(type:Exec) {
    workingDir '.\\'
    commandLine 'cmd', '/c', '.\\tools\\jaxb-ri\\bin\\xjc.bat -b .\\src\\main\\resources\\com\\glenfordham\\webserver\\automation\\config\\bindings.xml -d .\\src\\main\\java -p com.glenfordham.webserver.automation.jaxb .\\src\\main\\resources\\com\\glenfordham\\webserver\\automation\\config\\config.xsd -extension'
    errorOutput = new ByteArrayOutputStream()
    ext.output = {
        return errorOutput.toString()
    }
}

// Output all dependency jars to a folder
task copyToLib(type: Copy) {
    from configurations.compileClasspath
    into "$buildDir/libs"
}